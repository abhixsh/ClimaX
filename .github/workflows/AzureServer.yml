name: Azure server SSH

on:
  push:
    branches:
      - master

jobs:
  WebAppHost:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AZURE_VM_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    - name: Test SSH connection
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} "echo 'SSH connection successful!'"

    - name: Clone Repository on Azure VM
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} << 'EOF'
        sudo apt update
        sudo apt install -y git
        git clone https://github.com/abhixsh/ClimaX.git || (cd ClimaX && git pull origin main)
        ls -a
        EOF

    - name: Create env file and check files
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} << 'EOF'
        cd ClimaX/backend
        sudo echo "OPENWEATHERMAP_API_KEY=${{ secrets.OPENWEATHERMAP_API_KEY }}" > .env
        sudo echo "FLASK_ENV=${{ secrets.FLASK_ENV }}" >> .env
        sudo echo "FLASK_DEBUG=${{ secrets.FLASK_DEBUG }}" >> .env
        ls -a
        EOF

    - name: Install Docker and Docker Compose on EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} << 'EOF'
        sudo apt update
        sudo apt install -y docker.io
        sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        sudo systemctl start docker
        sudo systemctl enable docker
        sudo usermod -aG docker $USER
        EOF

    - name: Build frontend
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} << 'EOF'
        sudo chown -R $USER:$USER ClimaX/frontend/build
        sudo chmod -R 755 ClimaX/frontend/build
        sudo apt install -y nodejs npm
        cd ClimaX/frontend
        npm install
        npm run build
        EOF